import { TweetFilter } from 'rettiwt-core';
import { FetcherService } from '../internal/FetcherService';
import { RettiwtConfig } from '../../models/internal/RettiwtConfig';
import { Tweet } from '../../models/public/Tweet';
import { User } from '../../models/public/User';
import { CursoredData } from '../../models/public/CursoredData';
/**
 * Handles fetching of data related to tweets.
 *
 * @public
 */
export declare class TweetService extends FetcherService {
    /**
     * @param config - The config object for configuring the Rettiwt instance.
     *
     * @internal
     */
    constructor(config?: RettiwtConfig);
    /**
     * Get the details of a tweet.
     *
     * @param id - The id of the target tweet.
     * @returns The details of a single tweet with the given tweet id.
     *
     * @public
     */
    details(id: string): Promise<Tweet>;
    /**
     * Search for tweets using a query.
     *
     * @param query - The query be used for searching the tweets.
     * @param count - The number of tweets to fetch, must be \<= 20.
     * @param cursor - The cursor to the batch of tweets to fetch.
     * @returns The list of tweets that match the given filter.
     *
     * @public
     */
    search(query: TweetFilter, count?: number, cursor?: string): Promise<CursoredData<Tweet>>;
    /**
     * Get the tweets from the tweet list with the given id.
     *
     * @param listId - The id of list from where the tweets are to be fetched.
     * @param count - The number of tweets to fetch, must be \<= 100.
     * @param cursor - The cursor to the batch of tweets to fetch.
     * @returns The list tweets present in the given list.
     *
     * @remarks Due a bug in Twitter API, the count is ignored when no cursor is provided and defaults to 100.
     */
    list(listId: string, count?: number, cursor?: string): Promise<CursoredData<Tweet>>;
    /**
     * Get the list of users who liked a tweet.
     *
     * @param tweetId - The rest id of the target tweet.
     * @param count - The number of favoriters to fetch, must be \<= 100.
     * @param cursor - The cursor to the batch of favoriters to fetch.
     * @returns The list of users who liked the given tweet.
     *
     * @public
     */
    favoriters(tweetId: string, count?: number, cursor?: string): Promise<CursoredData<User>>;
    /**
     * Get the list of users who retweeted a tweet.
     *
     * @param tweetId - The rest id of the target tweet.
     * @param count - The number of retweeters to fetch, must be \<= 100.
     * @param cursor - The cursor to the batch of retweeters to fetch.
     * @returns The list of users who retweeted the given tweet.
     *
     * @public
     */
    retweeters(tweetId: string, count?: number, cursor?: string): Promise<CursoredData<User>>;
    /**
     * Post a tweet.
     *
     * @param tweetText - The text to be posted, length must be \<= 280 characters.
     * @returns Whether posting was successful or not.
     *
     * @public
     */
    tweet(tweetText: string): Promise<boolean>;
    /**
     * Favorite the tweet with the given id.
     *
     * @param tweetId - The id of the tweet to be favorited.
     * @returns Whether favoriting was successful or not.
     *
     * @public
     */
    favorite(tweetId: string): Promise<boolean>;
    /**
     * Retweet the tweet with the given id.
     *
     * @param tweetId - The id of the tweet with the given id.
     * @returns Whether retweeting was successful or not.
     *
     * @public
     */
    retweet(tweetId: string): Promise<boolean>;
}
