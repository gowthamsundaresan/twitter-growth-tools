import { EAuthenticationType } from '../enums/Authentication';
import { IAuthCredential } from '../types/AuthCredential';
import { AuthHeader } from './AuthHeader';
/**
 * The credentials for authenticating against Twitter.
 *
 * Depending on which tokens are present, the authentication type is determined as follows:
 * - authToken, guestToken => Guest authentication.
 * - authToken, csrfToken, cookie => User authentication.
 * - authToken, guestToken, cookie => Guest authentication while logging in.
 *
 * @public
 */
export declare class AuthCredential implements IAuthCredential {
    /** The bearer token from twitter.com. */
    authToken?: string;
    /** The guest token provided by Twitter API. */
    guestToken?: string;
    /** The csrf token for the session. */
    csrfToken?: string;
    /** The cookie of the twitter account, which is used to authenticate against twitter. */
    cookies?: string;
    /** The types of credential. */
    authenticationType?: EAuthenticationType;
    /**
     * Generates a new AuthCredentials using the given credentials.
     *
     * @param cookies The list of cookie strings to be used for authenticating against Twitter.
     * @param guestToken The guest token to be used to authenticate a guest session.
     */
    constructor(cookies?: string[], guestToken?: string);
    /**
     * @returns 'this' object's equivalent HTTP header representation.
     */
    toHeader(): AuthHeader;
}
