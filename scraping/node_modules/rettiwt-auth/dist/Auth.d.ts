import { AuthCredential } from './models/AuthCredential';
import { AccountCredential } from './models/AccountCredential';
/**
 * A class that deals with authenticating against Twitter API.
 *
 * @public
 */
export declare class Auth {
    /** The current flow token. */
    private flowToken;
    /** The current auth credentials. */
    private cred;
    /** The order in which the login subtasks must be executed. */
    private subtasks;
    constructor();
    /**
     * Generates the apporpriate payload for the given login subtask and given data.
     *
     * @param subtask The name of the subtask.
     * @param flowToken The flow token for the subtask.
     * @param accCred The account credentials to the Twitter account.
     * @returns The requried payload.
     *
     * @internal
     */
    private getSubtaskPayload;
    /**
     * Parses the incoming authentication error from Twitter API into a simplified message.
     *
     * @param error The incoming error.
     * @param flowName The flow that was executed, which raised this error.
     * @returns The simplified error message.
     *
     * @internal
     */
    private parseAuthError;
    /**
     * Initiates the login process and gets the required flow token and cookies for the login process.
     *
     * @internal
     */
    private initiateLogin;
    /**
     * Fetches a guest token, for guest authentication, from Twitter API.
     *
     * @returns The credentials containing the guest token.
     *
     * @public
     */
    getGuestCredential(): Promise<AuthCredential>;
    /**
     * Fetches the credentials for user authentication, from Twitter API.
     *
     * @param accCred The credentials (email, username and password) to the Twitter account.
     * @returns The credentials containing the authenticated tokens.
     *
     * @public
     */
    getUserCredential(accCred: AccountCredential): Promise<AuthCredential>;
}
