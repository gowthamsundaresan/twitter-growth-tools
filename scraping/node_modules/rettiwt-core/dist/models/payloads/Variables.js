"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Variables = void 0;
// PAYLOADS
var Args_1 = require("./Args");
// ENUMS
var Resources_1 = require("../../enums/Resources");
/**
 * Mandatory variables that must be sent as a URL-encoded, stringified-JSON.
 *
 * @public
 */
var Variables = /** @class */ (function () {
    /* eslint-enable @typescript-eslint/naming-convention */
    /**
     * Initializes the appropriate Variables object based on the requred resource type and parameters.
     *
     * @param resourceType - The type of resource that is requested.
     * @param args - The additional user-defined arguments for fetching the resource.
     */
    function Variables(resourceType, args) {
        this.includePromotedContent = false;
        this.withVoice = false;
        this.withCommunity = false;
        // Converting JSON args to Args object
        args = new Args_1.Args(resourceType, args);
        // Conditionally initializing variables
        if (resourceType == Resources_1.EResourceType.CREATE_TWEET) {
            this.tweet_text = args.tweetText;
        }
        else if (resourceType == Resources_1.EResourceType.CREATE_RETWEET || resourceType == Resources_1.EResourceType.FAVORITE_TWEET) {
            this.tweet_id = args.id;
        }
        else if (resourceType == Resources_1.EResourceType.LIST_DETAILS) {
            this.listId = args.id;
        }
        else if (resourceType == Resources_1.EResourceType.LIST_TWEETS) {
            this.listId = args.id;
            this.count = args.count;
            this.cursor = args.cursor;
        }
        else if (resourceType == Resources_1.EResourceType.TWEET_SEARCH && args.filter) {
            this.rawQuery = args.filter.toString();
            this.count = args.count;
            this.cursor = args.cursor;
            this.product = 'Latest';
        }
        else if (resourceType == Resources_1.EResourceType.TWEET_DETAILS) {
            this.tweetId = args.id;
        }
        else if (resourceType == Resources_1.EResourceType.TWEET_FAVORITERS || resourceType == Resources_1.EResourceType.TWEET_RETWEETERS) {
            this.tweetId = args.id;
            this.count = args.count;
            this.cursor = args.cursor;
        }
        else if (resourceType == Resources_1.EResourceType.USER_DETAILS) {
            this.screen_name = args.id;
        }
        else if (resourceType == Resources_1.EResourceType.USER_DETAILS_BY_ID) {
            this.userId = args.id;
        }
        else if (resourceType == Resources_1.EResourceType.USER_FOLLOWERS ||
            resourceType == Resources_1.EResourceType.USER_FOLLOWING ||
            resourceType == Resources_1.EResourceType.USER_LIKES ||
            resourceType == Resources_1.EResourceType.USER_TWEETS ||
            resourceType == Resources_1.EResourceType.USER_TWEETS_AND_REPLIES) {
            this.userId = args.id;
            this.count = args.count;
            this.cursor = args.cursor;
        }
    }
    /**
     * Converts this object to it's string representation.
     *
     * @returns 'this' object's string representation.
     */
    Variables.prototype.toString = function () {
        return "".concat(encodeURIComponent(JSON.stringify(this)));
    };
    return Variables;
}());
exports.Variables = Variables;
//# sourceMappingURL=Variables.js.map